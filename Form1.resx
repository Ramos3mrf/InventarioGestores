<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>