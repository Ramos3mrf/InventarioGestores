<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>